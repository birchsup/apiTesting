{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-21T15:08:24.451Z",
    "end": "2023-05-21T15:08:26.984Z",
    "duration": 2533,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "54e5d87e-7002-4639-a7ce-8b4bbc72a509",
      "title": "",
      "fullFile": "/Users/dmitrijsadovnikov/goLangLessons/api testing/test/posts.js",
      "file": "/test/posts.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e66fd35-ce4e-479a-b570-2939ee69cb1d",
          "title": "User Posts",
          "fullFile": "/Users/dmitrijsadovnikov/goLangLessons/api testing/test/posts.js",
          "file": "/test/posts.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: create new user in \"User Posts\"",
              "fullTitle": "User Posts \"before all\" hook: create new user in \"User Posts\"",
              "timedOut": false,
              "duration": 734,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n  args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "086bc1df-b400-4bac-affb-14ac8740e2c7",
              "parentUUID": "7e66fd35-ce4e-479a-b570-2939ee69cb1d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: delete user in \"User Posts\"",
              "fullTitle": "User Posts \"after all\" hook: delete user in \"User Posts\"",
              "timedOut": false,
              "duration": 932,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n  args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "ee61d30d-a546-430a-80a6-6b8419fe5eb4",
              "parentUUID": "7e66fd35-ce4e-479a-b570-2939ee69cb1d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "create new post",
              "fullTitle": "User Posts create new post",
              "timedOut": false,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n  args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "004e79aa-1f86-427e-abcb-07a135d60676",
              "parentUUID": "7e66fd35-ce4e-479a-b570-2939ee69cb1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get new post",
              "fullTitle": "User Posts should get new post",
              "timedOut": false,
              "duration": 434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n  args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "0ef23747-e324-42ce-91c2-9535f8666b48",
              "parentUUID": "7e66fd35-ce4e-479a-b570-2939ee69cb1d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "004e79aa-1f86-427e-abcb-07a135d60676",
            "0ef23747-e324-42ce-91c2-9535f8666b48"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 862,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}